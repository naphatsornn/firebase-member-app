// pages/api/protected.js

export default function handler(req, res) {
  const headers = req.headers;

  // ‚úÖ Log headers ‡πÄ‡∏û‡∏∑‡πà‡∏≠ debug
  console.log("üß™ Incoming Headers:", headers);

  // ‚úÖ ‡∏Å‡∏£‡∏ì‡∏µ‡∏û‡∏¥‡πÄ‡∏®‡∏©: Token ‡∏≠‡∏≤‡∏à‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô x-vercel-sc-headers ‚Üí ‡∏ï‡πâ‡∏≠‡∏á parse JSON ‡∏Å‡πà‡∏≠‡∏ô
  let embeddedToken = null;
  try {
    const vercelHeader = headers["x-vercel-sc-headers"];
    if (vercelHeader) {
      const parsed = JSON.parse(vercelHeader);
      if (parsed.Authorization?.startsWith("Bearer ")) {
        embeddedToken = parsed.Authorization.split("Bearer ")[1];
      }
    }
  } catch (err) {
    console.warn("‚ö†Ô∏è Failed to parse x-vercel-sc-headers:", err);
  }

  // ‚úÖ ‡∏£‡∏ß‡∏°‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö header ‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏™‡πà‡∏á‡∏°‡∏≤
  const token =
    headers["tmn-access-token"] ||        // ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô
    headers["tmn_access_token"] ||        // normalize ‡πÄ‡∏õ‡πá‡∏ô _
    headers["x-access-token"] ||          // fallback
    headers["x-tmn-access-token"] ||      // ‡∏ö‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ
    headers["custom-tmn-token"] ||        // custom
    (headers.authorization?.startsWith("Bearer ")
      ? headers.authorization.split("Bearer ")[1]
      : null) ||
    embeddedToken;                        // fallback ‡∏à‡∏≤‡∏Å x-vercel-sc-headers

  // ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö token
  if (!token) {
    return res.status(401).json({
      error: "‚ùå Token not found",
      allHeaders: headers,
    });
  }

  // ‚úÖ ‡∏û‡∏ö token ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö
  return res.status(200).json({
    message: "‚úÖ Token received",
    token,
    allHeaders: headers,
  });
}
